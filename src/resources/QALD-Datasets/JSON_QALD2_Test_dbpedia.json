[
        {
            "languageToKeyword": "{=[German, city, more than 250000, inhabitants]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n\t{ ?uri rdf:type dbo:City . } UNION { ?uri rdf:type dbo:Town . }\n        ?uri dbo:country res:Germany .\n\t?uri dbo:populationTotal ?population .\n\tFILTER ( ?population > 250000 ) \n        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": true,
            "goldenAnswer": "[]",
            "id": "1",
            "outOfScope": false,
            "languageToQuestion": "{en=Which German cities have more than 250000 inhabitants?}"
        },
        {
            "languageToKeyword": "{=[successor, John F. Kennedy]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n\tres:John_F._Kennedy dbo:successor ?uri .\n        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "2",
            "outOfScope": false,
            "languageToQuestion": "{en=Who was the successor of John F. Kennedy?}"
        },
        {
            "languageToKeyword": "{=[mayor, Berlin]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n\tres:Berlin dbo:leader ?uri .\n        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "3",
            "outOfScope": false,
            "languageToQuestion": "{en=Who is the mayor of Berlin?}"
        },
        {
            "languageToKeyword": "{=[student, Free University, Amsterdam]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT ?num WHERE \n{\n\tres:Vrije_Universiteit dbo:numberOfStudents ?num .\n}",
            "answerType": "number",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "4",
            "outOfScope": false,
            "languageToQuestion": "{en=How many students does the Free University in Amsterdam have?}"
        },
        {
            "languageToKeyword": "{=[second highest, mountain, Earth]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n\t?uri rdf:type dbo:Mountain .\n\t?uri dbo:elevation ?elevation .\n        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}\nORDER BY DESC(?elevation) OFFSET 1 LIMIT 1",
            "answerType": "resource",
            "aggregation": true,
            "goldenAnswer": "[]",
            "id": "5",
            "outOfScope": false,
            "languageToQuestion": "{en=What is the second highest mountain on Earth?}"
        },
        {
            "languageToKeyword": "{=[professional, skateboarder, Sweden]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n\t?uri dbo:occupation res:Skateboarding . \n        { ?uri dbo:birthPlace res:Sweden . }\n        UNION\n        { ?uri dbo:birthPlace ?place . \n          ?place dbo:country res:Sweden . }\n        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "6",
            "outOfScope": false,
            "languageToQuestion": "{en=Give me all professional skateboarders from Sweden.}"
        },
        {
            "languageToKeyword": "{=[Alberta, admit, province]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbp: <http://dbpedia.org/property/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT ?date WHERE \n{\n\tres:Alberta dbp:admittancedate ?date .\n}",
            "answerType": "date",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "7",
            "outOfScope": false,
            "languageToQuestion": "{en=When was Alberta admitted as province?}"
        },
        {
            "languageToKeyword": "{=[Himalayan mountain system, extend, country]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n\tres:Himalayas dbo:country ?uri .\n        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "8",
            "outOfScope": false,
            "languageToQuestion": "{en=To which countries does the Himalayan mountain system extend?}"
        },
        {
            "languageToKeyword": "{=[trumpet player, bandleader]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE\n{\n\t?uri dbo:occupation res:Bandleader .\n\t?uri dbo:instrument res:Trumpet . \n        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "9",
            "outOfScope": false,
            "languageToQuestion": "{en=Give me a list of all trumpet players that were bandleaders.}"
        },
        {
            "languageToKeyword": "{=[total amount, men, women, serve, FDNY]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbp: <http://dbpedia.org/property/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT ?num WHERE \n{\n\tres:New_York_City_Fire_Department dbp:strength ?num .\n}",
            "answerType": "number",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "10",
            "outOfScope": false,
            "languageToQuestion": "{en=What is the total amount of men and women serving in the FDNY?}"
        },
        {
            "languageToKeyword": "{=[Formula 1, race driver, most, races]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE {\n        ?uri rdf:type dbo:FormulaOneRacer .\n\t?uri dbo:races ?x .\n        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}\nORDER BY DESC(?x) OFFSET 0 LIMIT 1",
            "answerType": "resource",
            "aggregation": true,
            "goldenAnswer": "[]",
            "id": "11",
            "outOfScope": false,
            "languageToQuestion": "{en=Who is the Formula 1 race driver with the most races?}"
        },
        {
            "languageToKeyword": "{=[youngest, player, Premier League]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE {\n\t?uri dbo:team ?x .\n\t?x dbo:league res:Premier_League .\n\t?uri dbo:birthDate ?y .\n        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}\nORDER BY DESC(?y) OFFSET 0 LIMIT 1",
            "answerType": "resource",
            "aggregation": true,
            "goldenAnswer": "[]",
            "id": "13",
            "outOfScope": false,
            "languageToQuestion": "{en=Who is the youngest player in the Premier League?}"
        },
        {
            "languageToKeyword": "{=[member, Prodigy]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n        res:The_Prodigy dbo:bandMember ?uri .\n        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "14",
            "outOfScope": false,
            "languageToQuestion": "{en=Give me all members of Prodigy.}"
        },
        {
            "languageToKeyword": "{=[longest, river]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n        ?uri rdf:type dbo:River .\n        ?uri dbp:length ?x .\n        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}\nORDER BY DESC(?x) OFFSET 0 LIMIT 1",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "15",
            "outOfScope": false,
            "languageToQuestion": "{en=What is the longest river?}"
        },
        {
            "languageToKeyword": "{=[new BattleStar Galactica series, more, episodes, old Battle Star Galactica series]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nASK WHERE {\n\t<http://dbpedia.org/resource/Battlestar_Galactica_%281978_TV_series%29> dbo:numberOfEpisodes ?x .\n\t<http://dbpedia.org/resource/Battlestar_Galactica_%282004_TV_series%29> dbo:numberOfEpisodes ?y .\n\tFILTER (?y > ?x)\n}",
            "answerType": "boolean",
            "aggregation": true,
            "goldenAnswer": "[]",
            "id": "16",
            "outOfScope": false,
            "languageToQuestion": "{en=Does the new Battlestar Galactica series have more episodes than the old one?}"
        },
        {
            "languageToKeyword": "{=[car, produce, Germany]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n        ?uri rdf:type dbo:Automobile .   \n        { ?uri dbp:production res:Germany . } UNION { ?uri dbp:assembly res:Germany . }\n        UNION { ?uri dbp:manufacturer ?x .  \n        { ?x dbo:locationCountry res:Germany . } UNION { ?x rdf:type yago:AutomotiveCompaniesOfGermany . } }\n        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "17",
            "outOfScope": false,
            "languageToQuestion": "{en=Give me all cars that are produced in Germany.}"
        },
        {
            "languageToKeyword": "{=[people, born, Vienna, die, Berlin]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n        ?uri dbo:birthPlace res:Vienna .\n        ?uri dbo:deathPlace res:Berlin .\n        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "19",
            "outOfScope": false,
            "languageToQuestion": "{en=Give me all people that were born in Vienna and died in Berlin.}"
        },
        {
            "languageToKeyword": "{=[tall, Michael Jordan]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT ?num WHERE \n{\n        res:Michael_Jordan dbo:height ?num .\n}",
            "answerType": "number",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "20",
            "outOfScope": false,
            "languageToQuestion": "{en=How tall is Michael Jordan?}"
        },
        {
            "languageToKeyword": "{=[capital, Canada]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo:  <http://dbpedia.org/ontology/>\nPREFIX res:  <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n        res:Canada dbo:capital ?uri .\n        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "21",
            "outOfScope": false,
            "languageToQuestion": "{en=What is the capital of Canada?}"
        },
        {
            "languageToKeyword": "{=[governor, Texas]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX res:  <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\nSELECT DISTINCT ?uri ?string WHERE \n{\n        res:Texas dbp:governor ?string .\n        ?uri foaf:name ?string.\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "22",
            "outOfScope": false,
            "languageToQuestion": "{en=Who is the governor of Texas?}"
        },
        {
            "languageToKeyword": "{=[Harry, William, Prince of Wales, same, mother]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbp: <http://dbpedia.org/property/>\nASK WHERE \n{       \n        <http://dbpedia.org/resource/Prince_William,_Duke_of_Cambridge> dbp:mother ?x .  \n\t<http://dbpedia.org/resource/Prince_Harry_of_Wales> dbp:mother ?y . \n\tFILTER (?x = ?y)\n}",
            "answerType": "boolean",
            "aggregation": true,
            "goldenAnswer": "[]",
            "id": "23",
            "outOfScope": false,
            "languageToQuestion": "{en=Do Harry and William, Princes of Wales, have the same mother?}"
        },
        {
            "languageToKeyword": "{=[father, Queen Elizabeth II]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX res: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE { \n        res:Elizabeth_II dbp:father ?uri .\n        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "24",
            "outOfScope": false,
            "languageToQuestion": "{en=Who was the father of Queen Elizabeth II?}"
        },
        {
            "languageToKeyword": "{=[U.S. state, admit, last]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX res: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string ?x WHERE \n{ \n\t?uri rdf:type yago:StatesOfTheUnitedStates .\n\t?uri dbp:admittancedate ?x .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }  \n}\nORDER BY DESC(?x) OFFSET 0 LIMIT 1",
            "answerType": "resource",
            "aggregation": true,
            "goldenAnswer": "[]",
            "id": "25",
            "outOfScope": false,
            "languageToQuestion": "{en=Which U.S. state has been admitted latest?}"
        },
        {
            "languageToKeyword": "{=[Sean Parnell, governor, U.S. state]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n        ?uri rdf:type yago:StatesOfTheUnitedStates .\n        ?uri dbp:governor res:Sean_Parnell .\n        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "27",
            "outOfScope": false,
            "languageToQuestion": "{en=Sean Parnell is the governor of which U.S. state?}"
        },
        {
            "languageToKeyword": "{=[movie, direct, Francis Ford Coppola]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n        ?uri rdf:type dbo:Film .\n        ?uri dbo:director res:Francis_Ford_Coppola .\n        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "28",
            "outOfScope": false,
            "languageToQuestion": "{en=Give me all movies directed by Francis Ford Coppola.}"
        },
        {
            "languageToKeyword": "{=[actor, starring, movie, direct, starring, William Shatner]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n        ?x dbo:director res:William_Shatner .\n        ?x dbo:starring res:William_Shatner .\n        { ?x dbo:starring ?uri . } UNION { ?x dbp:starring ?uri . }\n        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "29",
            "outOfScope": false,
            "languageToQuestion": "{en=Give me all actors starring in movies directed by and starring William Shatner.}"
        },
        {
            "languageToKeyword": "{=[birth name, Angela Merkel]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbp: <http://dbpedia.org/property/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?string WHERE\n{ \n\tres:Angela_Merkel dbp:birthName ?string .\n}",
            "answerType": "string",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "30",
            "outOfScope": false,
            "languageToQuestion": "{en=What is the birth name of Angela Merkel?}"
        },
        {
            "languageToKeyword": "{=[current, Methodist, national leader]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbp: <http://dbpedia.org/property/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n\t?uri rdf:type yago:CurrentNationalLeaders .\n\t?uri dbp:religion res:Methodism .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "31",
            "outOfScope": false,
            "languageToQuestion": "{en=Give me all current Methodist national leaders.}"
        },
        {
            "languageToKeyword": "{=[Australian, nonprofit organization]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{       \n        ?uri dbo:type res:Nonprofit_organization .\n        { ?uri dbo:locationCountry res:Australia . }\n        UNION\n        { ?uri dbo:location ?x . \n          ?x dbo:country res:Australia . }\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "33",
            "outOfScope": false,
            "languageToQuestion": "{en=Give me all Australian nonprofit organizations.}"
        },
        {
            "languageToKeyword": "{=[Lawrence of Arabia, participate, military conflict]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n        res:T._E._Lawrence dbo:battle ?uri .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "34",
            "outOfScope": false,
            "languageToQuestion": "{en=In which military conflicts did Lawrence of Arabia participate?}"
        },
        {
            "languageToKeyword": "{=[develop, Skype]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res:  <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n\tres:Skype dbo:developer ?uri .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "35",
            "outOfScope": false,
            "languageToQuestion": "{en=Who developed Skype?}"
        },
        {
            "languageToKeyword": "{}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo:  <http://dbpedia.org/ontology/>\nPREFIX res:  <http://dbpedia.org/resource/>\nSELECT ?num WHERE \n{\n        res:Maribor dbo:populationTotal ?num .\n}",
            "answerType": "number",
            "aggregation": true,
            "goldenAnswer": "[]",
            "id": "38",
            "outOfScope": false,
            "languageToQuestion": "{en=How many inhabitants does Maribor have?}"
        },
        {
            "languageToKeyword": "{=[company, Munich]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\t\n        ?uri rdf:type dbo:Company .\n\t{ ?uri dbo:location res:Munich . } \n        UNION \n        { ?uri dbo:headquarter res:Munich . } \n        UNION \n        { ?uri dbo:locationCity res:Munich . }\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "39",
            "outOfScope": false,
            "languageToQuestion": "{en=Give me all companies in Munich.}"
        },
        {
            "languageToKeyword": "{=[boardgame, GMT]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT ?uri ?string WHERE \n{\t\n        ?uri dbo:publisher res:GMT_Games .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "40",
            "outOfScope": false,
            "languageToQuestion": "{en=List all boardgames by GMT.}"
        },
        {
            "languageToKeyword": "{=[founded, Intel]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n\tres:Intel dbo:foundedBy ?uri . \n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "41",
            "outOfScope": false,
            "languageToQuestion": "{en=Who founded Intel?}"
        },
        {
            "languageToKeyword": "{=[husband, Amanda Palmer]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbp: <http://dbpedia.org/property/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n\tres:Amanda_Palmer dbp:spouse ?uri . \n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "42",
            "outOfScope": false,
            "languageToQuestion": "{en=Who is the husband of Amanda Palmer?}"
        },
        {
            "languageToKeyword": "{=[breed, German Shepherd dog]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbp: <http://dbpedia.org/property/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT ?uri WHERE \n{\n\t?uri dbp:breed res:German_Shepherd_Dog .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "43",
            "outOfScope": false,
            "languageToQuestion": "{en=Give me all breeds of the German Shepherd dog.}"
        },
        {
            "languageToKeyword": "{=[Weser, flow through, city]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n\tres:Weser dbo:city ?uri .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "44",
            "outOfScope": false,
            "languageToQuestion": "{en=Which cities does the Weser flow through?}"
        },
        {
            "languageToKeyword": "{=[contry, connected, Rhine]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n\tres:Rhine dbo:country ?uri .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "45",
            "outOfScope": false,
            "languageToQuestion": "{en=Which countries are connected by the Rhine?}"
        },
        {
            "languageToKeyword": "{=[professional surfer, born, Philippines]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE\n{\n\t?uri dbo:occupation res:Surfing .\n\t?uri dbo:birthPlace res:Philippines .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "46",
            "outOfScope": false,
            "languageToQuestion": "{en=Which professional surfers were born on the Philippines?}"
        },
        {
            "languageToKeyword": "{=[UK city, headquarters, MI6]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX res: <http://dbpedia.org/resource/>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n\tres:Secret_Intelligence_Service dbo:headquarter ?uri .\n        ?uri dbo:country res:United_Kingdom .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "48",
            "outOfScope": false,
            "languageToQuestion": "{en=In which UK city are the headquarters of the MI6?}"
        },
        {
            "languageToKeyword": "{=[designer, Uzi, develop, other, weapon]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE {\n        ?uri rdf:type dbo:Weapon .\n\t?uri dbp:designer ?x .\n        res:Uzi dbp:designer ?x .\n        FILTER (?uri != res:Uzi)\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "49",
            "outOfScope": false,
            "languageToQuestion": "{en=Which other weapons did the designer of the Uzi develop?}"
        },
        {
            "languageToKeyword": "{=[Cuban Missile Crisis, earlier, Bay of Pigs Invasion]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nASK WHERE \n{\n        res:Cuban_Missile_Crisis dbo:date ?x .\n\tres:Bay_of_Pigs_Invasion dbo:date ?y .\n\tFILTER (?x < ?y)\n}",
            "answerType": "boolean",
            "aggregation": true,
            "goldenAnswer": "[]",
            "id": "50",
            "outOfScope": false,
            "languageToQuestion": "{en=Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?}"
        },
        {
            "languageToKeyword": "{=[Frisian island, belong, Netherlands]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE\n{\n\t?uri rdf:type yago:FrisianIslands .\n        ?uri dbo:country res:Netherlands .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "51",
            "outOfScope": false,
            "languageToQuestion": "{en=Give me all Frisian islands that belong to the Netherlands.}"
        },
        {
            "languageToKeyword": "{=[ruling party, Lisbon]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbp: <http://dbpedia.org/property/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n\tres:Lisbon dbp:leaderParty ?uri .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "53",
            "outOfScope": false,
            "languageToQuestion": "{en=What is the ruling party in Lisbon?}"
        },
        {
            "languageToKeyword": "{=[nickname, San Francisco]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbp: <http://dbpedia.org/property/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?string WHERE \n{\n\tres:San_Francisco dbp:nickname ?string .\n}",
            "answerType": "string",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "54",
            "outOfScope": false,
            "languageToQuestion": "{en=What are the nicknames of San Francisco?}"
        },
        {
            "languageToKeyword": "{=[Greek goddess, dwell, Mount Olympys]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbp: <http://dbpedia.org/property/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n        ?uri rdf:type yago:GreekGoddesses .\n\t?uri dbp:abode res:Mount_Olympus .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "55",
            "outOfScope": false,
            "languageToQuestion": "{en=Which Greek goddesses dwelt on Mount Olympus?}"
        },
        {
            "languageToKeyword": "{=[Hells Angels, founded]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbp: <http://dbpedia.org/property/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT ?date WHERE \n{\n\tres:Hells_Angels dbp:founded ?date .\n}",
            "answerType": "date",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "56",
            "outOfScope": false,
            "languageToQuestion": "{en=When were the Hells Angels founded?}"
        },
        {
            "languageToKeyword": "{=[Apollo 14, astronaut]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n\t?uri dbo:mission res:Apollo_14 .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "57",
            "outOfScope": false,
            "languageToQuestion": "{en=Give me the Apollo 14 astronauts.}"
        },
        {
            "languageToKeyword": "{=[time zone, Salt Lake City]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX res: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n\tres:Salt_Lake_City dbp:timezone ?uri . \n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "58",
            "outOfScope": false,
            "languageToQuestion": "{en=What is the time zone of Salt Lake City?}"
        },
        {
            "languageToKeyword": "{=[U.S. state, same, timezone, Utah]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX res: <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n\tres:Utah dbp:timezone ?x . \n        ?uri rdf:type yago:StatesOfTheUnitedStates . \n        ?uri dbp:timezone ?x .\n        FILTER (?uri != res:Utah)\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": true,
            "goldenAnswer": "[]",
            "id": "59",
            "outOfScope": false,
            "languageToQuestion": "{en=Which U.S. states are in the same timezone as Utah?}"
        },
        {
            "languageToKeyword": "{=[lake, Denmark]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE\n{\n\t{ ?uri rdf:type dbo:Lake .\n\t  ?uri dbo:country res:Denmark . }\n\tUNION\n\t{ ?uri rdf:type yago:LakesOfDenmark . }\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "60",
            "outOfScope": false,
            "languageToQuestion": "{en=Give me a list of all lakes in Denmark.}"
        },
        {
            "languageToKeyword": "{=[Socrates, influence, Aristotle]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nASK WHERE\n{\n\tres:Aristotle dbo:influencedBy res:Socrates .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "boolean",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "62",
            "outOfScope": false,
            "languageToQuestion": "{en=Did Socrates influence Aristotle?}"
        },
        {
            "languageToKeyword": "{=[Argentine, film]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE\n{\n        { ?uri rdf:type yago:ArgentineFilms . }\n        UNION\n\t{ ?uri rdf:type dbo:Film .\n\t{ ?uri dbo:country res:Argentina . } UNION { ?uri dbp:country 'Argentina'@en . } }\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "63",
            "outOfScope": false,
            "languageToQuestion": "{en=Give me all Argentine films.}"
        },
        {
            "languageToKeyword": "{=[NASA, operate, launch pad]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n        ?uri rdf:type dbo:LaunchPad .\n\t?uri dbo:operator res:NASA .\n        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }  \n}",
            "answerType": "list",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "64",
            "outOfScope": false,
            "languageToQuestion": "{en=Give me all launch pads operated by NASA.}"
        },
        {
            "languageToKeyword": "{=[John Lennon, play, instrument]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n        res:John_Lennon dbo:instrument ?uri .\n        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }  \n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "65",
            "outOfScope": false,
            "languageToQuestion": "{en=Which instruments did John Lennon play?}"
        },
        {
            "languageToKeyword": "{=[ship, called after, Benjamin Franklin]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX res:  <http://dbpedia.org/resource/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n        ?uri dbp:shipNamesake res:Benjamin_Franklin .\n        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "66",
            "outOfScope": false,
            "languageToQuestion": "{en=Which ships were called after Benjamin Franklin?}"
        },
        {
            "languageToKeyword": "{=[parents, wife, Juan Carlos I]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n\tres:Juan_Carlos_I_of_Spain dbo:spouse ?x .\n        ?x dbo:parent ?uri .\n        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "67",
            "outOfScope": false,
            "languageToQuestion": "{en=Who are the parents of the wife of Juan Carlos I?}"
        },
        {
            "languageToKeyword": "{=[employees, Google]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX res: <http://dbpedia.org/resource/>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nSELECT ?num WHERE \n{\n\tres:Google dbo:numberOfEmployees ?num .\n}",
            "answerType": "number",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "68",
            "outOfScope": false,
            "languageToQuestion": "{en=How many employees does Google have?}"
        },
        {
            "languageToKeyword": "{=[Tesla, win, nobel prize, physics]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nASK WHERE \n{\n        res:Nikola_Tesla dbo:award res:Nobel_Prize_in_Physics .\n}",
            "answerType": "boolean",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "69",
            "outOfScope": false,
            "languageToQuestion": "{en=Did Tesla win a nobel prize in physics?}"
        },
        {
            "languageToKeyword": "{=[Michelle Obama, wife, Barack Obama]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nASK WHERE \n{\n\tres:Barack_Obama dbo:spouse res:Michelle_Obama .\n}",
            "answerType": "boolean",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "70",
            "outOfScope": false,
            "languageToQuestion": "{en=Is Michelle Obama the wife of Barack Obama?}"
        },
        {
            "languageToKeyword": "{=[Statue of Liberty, built]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbp: <http://dbpedia.org/property/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT ?num WHERE \n{\n\tres:Statue_of_Liberty dbp:built ?num .\n}",
            "answerType": "date",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "71",
            "outOfScope": false,
            "languageToQuestion": "{en=When was the Statue of Liberty built?}"
        },
        {
            "languageToKeyword": "{=[Area 51, located, U.S. state]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n\tres:Area_51 dbo:location ?uri .\n        ?uri dbo:country res:United_States .\n        OPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "72",
            "outOfScope": false,
            "languageToQuestion": "{en=In which U.S. state is Area 51 located?}"
        },
        {
            "languageToKeyword": "{=[Michael Jackson, die]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?date WHERE {\n\tres:Michael_Jackson dbo:deathDate ?date .\n}",
            "answerType": "date",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "74",
            "outOfScope": false,
            "languageToQuestion": "{en=When did Michael Jackson die?}"
        },
        {
            "languageToKeyword": "{=[daughter, British earl, die, same, place, born]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n\t?uri rdf:type yago:DaughtersOfBritishEarls .\n\t?uri dbo:birthPlace ?x .\n\t?uri dbo:deathPlace ?y .\n\tFILTER (?x != ?y) .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "75",
            "outOfScope": false,
            "languageToQuestion": "{en=Which daughters of British earls died in the same place they were born in?}"
        },
        {
            "languageToKeyword": "{=[Margaret Thatcher, child]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX res: <http://dbpedia.org/resource/>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n\tres:Margaret_Thatcher dbo:child ?uri .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "76",
            "outOfScope": false,
            "languageToQuestion": "{en=List the children of Margaret Thatcher.}"
        },
        {
            "languageToKeyword": "{=[called, Scarface]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbp: <http://dbpedia.org/property/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE {\n\t?uri dbp:nickname res:Scarface .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "77",
            "outOfScope": false,
            "languageToQuestion": "{en=Who was called Scarface?}"
        },
        {
            "languageToKeyword": "{=[Margaret Thatcher, chemist]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX res: <http://dbpedia.org/resource/>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nASK WHERE {\n\tres:Margaret_Thatcher dbo:profession res:Chemist .\n}",
            "answerType": "boolean",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "78",
            "outOfScope": false,
            "languageToQuestion": "{en=Was Margaret Thatcher a chemist?}"
        },
        {
            "languageToKeyword": "{=[Dutch Schultz, jew]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbp: <http://dbpedia.org/property/>\nPREFIX res: <http://dbpedia.org/resource/>\nASK WHERE {\n\tres:Dutch_Schultz dbp:ethnicity 'Jewish'@en .\n}",
            "answerType": "boolean",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "79",
            "outOfScope": false,
            "languageToQuestion": "{en=Was Dutch Schultz a jew?}"
        },
        {
            "languageToKeyword": "{=[book, William Goldman, more than 300, pages]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n        ?uri rdf:type dbo:Book .\n\t?uri dbo:author res:William_Goldman .\n        ?uri dbo:numberOfPages ?x .\n        FILTER (?x > 300)\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": true,
            "goldenAnswer": "[]",
            "id": "80",
            "outOfScope": false,
            "languageToQuestion": "{en=Give me all books by William Goldman with more than 300 pages.}"
        },
        {
            "languageToKeyword": "{=[Viking Press, publish, book, Kerouac]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE {\n\t?uri rdf:type dbo:Book .\n\t?uri dbo:publisher res:Viking_Press .\n        ?uri dbo:author res:Jack_Kerouac .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "81",
            "outOfScope": false,
            "languageToQuestion": "{en=Which books by Kerouac were published by Viking Press?}"
        },
        {
            "languageToKeyword": "{=[American invention]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n\t?uri rdf:type yago:AmericanInventions .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "82",
            "outOfScope": false,
            "languageToQuestion": "{en=Give me a list of all American inventions.}"
        },
        {
            "languageToKeyword": "{=[high, Mount Everest]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT ?num WHERE \n{\n\tres:Mount_Everest dbo:elevation ?num.\n}",
            "answerType": "number",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "83",
            "outOfScope": false,
            "languageToQuestion": "{en=How high is the Mount Everest?}"
        },
        {
            "languageToKeyword": "{=[create, comic, Captain America]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT ?uri ?string WHERE {\n\tres:Captain_America dbo:creator ?uri .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "84",
            "outOfScope": false,
            "languageToQuestion": "{en=Who created the comic Captain America?}"
        },
        {
            "languageToKeyword": "{=[people, live, capital, Australia]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT ?num WHERE {\n\tres:Australia dbo:capital ?x .\n        ?x dbo:populationTotal ?num .\n}",
            "answerType": "number",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "85",
            "outOfScope": false,
            "languageToQuestion": "{en=How many people live in the capital of Australia?}"
        },
        {
            "languageToKeyword": "{=[largest, city, Australia]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE {\n\tres:Australia dbo:largestCity ?uri .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "86",
            "outOfScope": false,
            "languageToQuestion": "{en=What is the largest city in Australia?}"
        },
        {
            "languageToKeyword": "{=[compose, music, Harold and Maude]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX res: <http://dbpedia.org/resource/>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE {\n\tres:Harold_and_Maude dbo:musicComposer ?uri .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "87",
            "outOfScope": false,
            "languageToQuestion": "{en=Who composed the music for Harold and Maude?}"
        },
        {
            "languageToKeyword": "{=[film, starring, Clint Eastwood, direct]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n\t?uri dbo:director res:Clint_Eastwood .\n        ?uri dbo:starring res:Clint_Eastwood .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": true,
            "goldenAnswer": "[]",
            "id": "88",
            "outOfScope": false,
            "languageToQuestion": "{en=Which films starring Clint Eastwood did he direct himself?}"
        },
        {
            "languageToKeyword": "{=[city, former Dutch queen Juliana, burried]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n\tres:Juliana_of_the_Netherlands dbo:restingPlace ?uri.\n\t?uri rdf:type dbo:Settlement .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "89",
            "outOfScope": false,
            "languageToQuestion": "{en=In which city was the former Dutch queen Juliana buried?}"
        },
        {
            "languageToKeyword": "{=[residence, prime minister, Spain]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbp: <http://dbpedia.org/property/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE \n{\n\tres:Prime_Minister_of_Spain dbp:residence ?uri .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "90",
            "outOfScope": false,
            "languageToQuestion": "{en=Where is the residence of the prime minister of Spain?}"
        },
        {
            "languageToKeyword": "{=[U.S. state, abbreviation, MN]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbp: <http://dbpedia.org/property/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX yago: <http://dbpedia.org/class/yago/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT ?uri ?string WHERE \n{\n\t?uri rdf:type yago:StatesOfTheUnitedStates .\n        ?uri dbp:postalabbreviation 'MN'@en .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "91",
            "outOfScope": false,
            "languageToQuestion": "{en=Which U.S. State has the abbreviation MN?}"
        },
        {
            "languageToKeyword": "{=[Sam Reimi, direct, movie, after, Army of Darkness]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE\n{\n\t?uri rdf:type dbo:Film .\n\t?uri dbo:director res:Sam_Raimi .\n\t{ ?uri dbo:releaseDate ?x . } UNION { ?uri dbp:released ?x . }\n\tres:Army_of_Darkness dbo:releaseDate ?y .\n\tFILTER (?x > ?y)\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": true,
            "goldenAnswer": "[]",
            "id": "93",
            "outOfScope": false,
            "languageToQuestion": "{en=Which movies did Sam Raimi direct after Army of Darkness?}"
        },
        {
            "languageToKeyword": "{=[founding year, brewery, produce, Pilsner Urquell]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbp: <http://dbpedia.org/property/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT ?num WHERE\n{\n\tres:Pilsner_Urquell dbp:brewery ?uri .\n\t?uri dbp:foundation ?num .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "number",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "94",
            "outOfScope": false,
            "languageToQuestion": "{en=What is the founding year of the brewery that produces Pilsner Urquell?}"
        },
        {
            "languageToKeyword": "{=[write, lyrics, Polish, national anthem]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE\n{\n\tres:Poland dbo:anthem ?x .\n        ?x dbp:author ?uri .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "95",
            "outOfScope": false,
            "languageToQuestion": "{en=Who wrote the lyrics for the Polish national anthem?}"
        },
        {
            "languageToKeyword": "{=[B-sides, Ramones]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX dbp: <http://dbpedia.org/property/>\nPREFIX res: <http://dbpedia.org/resource/>\nSELECT DISTINCT ?string WHERE\n{\n\t?x dbo:musicalArtist res:Ramones .\n        ?x dbp:bSide ?string . \n}",
            "answerType": "string",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "96",
            "outOfScope": false,
            "languageToQuestion": "{en=Give me all B-sides of the Ramones.}"
        },
        {
            "languageToKeyword": "{=[paint, The Storm on the Sea of Galilee]}",
            "hybrid": false,
            "onlydbo": false,
            "sparqlQuery": "PREFIX dbp: <http://dbpedia.org/property/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE\n{\n\tres:The_Storm_on_the_Sea_of_Galilee dbp:artist ?uri .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "97",
            "outOfScope": false,
            "languageToQuestion": "{en=Who painted The Storm on the Sea of Galilee?}"
        },
        {
            "languageToKeyword": "{=[country, creator, Miffy]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE\n{\n\tres:Miffy dbo:creator ?x .\n\t?x dbo:nationality ?uri .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "98",
            "outOfScope": false,
            "languageToQuestion": "{en=Which country does the creator of Miffy come from?}"
        },
        {
            "languageToKeyword": "{=[Elvis, record, first, album, label]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE\n{\n\t?x rdf:type dbo:Album .\n\t?x dbo:artist res:Elvis_Presley .\n\t?x dbo:releaseDate ?y .\n\t?x dbo:recordLabel ?uri .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}\nORDER BY ASC(?y) LIMIT 1",
            "answerType": "resource",
            "aggregation": true,
            "goldenAnswer": "[]",
            "id": "99",
            "outOfScope": false,
            "languageToQuestion": "{en=For which label did Elvis record his first album?}"
        },
        {
            "languageToKeyword": "{=[produce, Orangina]}",
            "hybrid": false,
            "onlydbo": true,
            "sparqlQuery": "PREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX res: <http://dbpedia.org/resource/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?uri ?string WHERE\n{\n\t?uri dbo:product res:Orangina .\n\tOPTIONAL { ?uri rdfs:label ?string. FILTER (lang(?string) = 'en') }\n}",
            "answerType": "resource",
            "aggregation": false,
            "goldenAnswer": "[]",
            "id": "100",
            "outOfScope": false,
            "languageToQuestion": "{en=Who produces Orangina?}"
        }
]
